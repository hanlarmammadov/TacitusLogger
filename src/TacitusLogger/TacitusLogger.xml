<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TacitusLogger</name>
    </assembly>
    <members>
        <member name="T:TacitusLogger.Builders.ConsoleDestinationBuilder">
            <summary>
            Builds the file log destination and adds it to own log group destination builder.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.ConsoleDestinationBuilder.#ctor(TacitusLogger.Builders.ILogGroupDestinationsBuilder)">
            <summary>
            Creates an instance of <c>TacitusLogger.Builders.ConsoleDestinationBuilder</c> using its parent 
            log group destination builder.
            </summary>
            <param name="logGroupDestinationsBuilder">Parent log group destinations builder that will be used to complete build process.</param>
        </member>
        <member name="P:TacitusLogger.Builders.ConsoleDestinationBuilder.LogSerializer">
            <summary>
            Gets the log serializer specified during the build.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.ConsoleDestinationBuilder.ColorScheme">
            <summary>
            Gets the color scheme specified during the build.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.ConsoleDestinationBuilder.WithLogSerializer(TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Adds a custom log serializer of type <c>TacitusLogger.Serializers.ILogSerializer</c>
            that will be used to generate log model text representation. If omitted, the default log serializer
            of type <c>TacitusLogger.Serializers.SimpleTemplateLogSerializer</c> with the default template will be added.
            </summary>
            <param name="logSerializer">Log serializer.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ConsoleDestinationBuilder.WithCustomColors(System.Collections.Generic.IDictionary{TacitusLogger.LogType,System.ConsoleColor})">
            <summary>
            Specifies the custom color scheme that will be used to paint log messages of different log types
            to different colors. If omitted, the default color scheme will be used.
            </summary>
            <param name="colorScheme">The color scheme containing console colors for each log type.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ConsoleDestinationBuilder.Add">
            <summary>
            Completes log destination build process by adding it to the parent log group destination builder.
            </summary>
            <returns>The parent log group destination builder.</returns>
        </member>
        <member name="T:TacitusLogger.Builders.DebugDestinationBuilder">
            <summary>
            Builds the debug log destination and adds it to own log group destination builder.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.DebugDestinationBuilder.#ctor(TacitusLogger.Builders.ILogGroupDestinationsBuilder)">
            <summary>
            Creates an instance of <c>TacitusLogger.Builders.DebugDestinationBuilder</c> using its parent 
            log group destination builder.
            </summary>
            <param name="logGroupDestinationsBuilder">Parent log group destinations builder that will be used to complete build process.</param>
        </member>
        <member name="P:TacitusLogger.Builders.DebugDestinationBuilder.LogSerializer">
            <summary>
            Gets the log serializer specified during the build.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.DebugDestinationBuilder.WithLogSerializer(TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Adds a custom log serializer of type <c>TacitusLogger.Serializers.ILogSerializer</c>
            that will be used to generate log model text representation. If omitted, the default log serializer
            of type <c>TacitusLogger.Serializers.SimpleTemplateLogSerializer</c> with the default template will be added.
            </summary>
            <param name="logSerializer">Log serializer.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.DebugDestinationBuilder.Add">
            <summary>
            Completes log destination build process by adding it to the parent log group destination builder.
            </summary>
            <returns>The parent log group destination builder.</returns>
        </member>
        <member name="T:TacitusLogger.Builders.BuilderExtensionsForLogGroupBuilder">
            <summary>
            Adds extension methods to <c>TacitusLogger.Builders.ILogGroupDestinationsBuilder</c> interface and its implementations.
            </summary> 
        </member>
        <member name="M:TacitusLogger.Builders.BuilderExtensionsForLogGroupBuilder.File(TacitusLogger.Builders.ILogGroupDestinationsBuilder)">
            <summary>
            Initiate the adding a file destination to the log group builder.
            </summary>
            <param name="obj">Log group destination builder.</param>
            <returns>File destination builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.BuilderExtensionsForLogGroupBuilder.Console(TacitusLogger.Builders.ILogGroupDestinationsBuilder)">
            <summary>
            Initiate the adding a console destination to the log group builder.
            </summary>
            <param name="obj">Log group destination builder.</param>
            <returns>Console destination builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.BuilderExtensionsForLogGroupBuilder.Debug(TacitusLogger.Builders.ILogGroupDestinationsBuilder)">
            <summary>
            Initiate the adding a debug destination to the log group builder.
            </summary>
            <param name="obj">Log group destination builder.</param>
            <returns>Debug destination builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.BuilderExtensionsForLogGroupBuilder.TextWriter(TacitusLogger.Builders.ILogGroupDestinationsBuilder)">
            <summary>
            Initiate the adding a TextWriter destination to the log group builder.
            </summary>
            <param name="obj">Log group destination builder.</param>
            <returns>TextWriter destination builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.BuilderExtensionsForLogGroupBuilder.BuildLogger(TacitusLogger.Builders.ILogGroupDestinationsBuilder)">
            <summary>
            Finishes the build process by building the current log group and the logger.
            </summary>
            <param name="self">Log group destination builder.</param>
            <returns>The ready to use instance of the <c>TacitusLogger.ILogger</c></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:TacitusLogger.Builders.IBuilderWithFilePathExtensions" -->
        <member name="M:TacitusLogger.Builders.IBuilderWithFilePathExtensions.WithPath``1(TacitusLogger.Builders.IBuilderWithFilePath{``0},System.String)">
            <summary>
            Adds a custom file path generator of type <c>TacitusLogger.Serializers.FilePathTemplateLogSerializer</c>
            with the specified path template.
            </summary>
            <param name="pathTemplate">Path template string that will be used to generate file path using log model.</param>
            <returns>Self.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TacitusLogger.Builders.IBuilderWithFilePathExtensions.WithPath``1(TacitusLogger.Builders.IBuilderWithFilePath{``0},TacitusLogger.LogModelFunc{System.String})" -->
        <member name="T:TacitusLogger.Builders.ILoggerBuilderExtensions">
            <summary>
            Adds extension methods to <c>TacitusLogger.Builders.ILoggerBuilder</c> interface and its implementations.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.ILoggerBuilderExtensions.ForAllLogs(TacitusLogger.Builders.ILoggerBuilder)">
            <summary>
            Creates a new log group and sets the rule predicate to it
            that will consider all logs as eligible to be sent to this log group.
            </summary>
            <param name="self">Logger builder.</param>
            <returns>Log group destinations builder for this log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILoggerBuilderExtensions.WithGuidLogId(TacitusLogger.Builders.ILoggerBuilder)">
            <summary>
            Adds a custom log id generator of type <c>TacitusLogger.LogIdGenerators.GuidLogIdGenerator</c> to the 
            logger builder.
            </summary>
            <param name="self">Logger builder.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILoggerBuilderExtensions.WithGuidLogId(TacitusLogger.Builders.ILoggerBuilder,System.String)">
            <summary>
            Adds a custom log id generator of type <c>TacitusLogger.LogIdGenerators.GuidLogIdGenerator</c> with the
            specified GUID string format to the logger builder.
            </summary>
            <param name="self">Logger builder.</param>
            <param name="guidFormat">The guid format that will be used to create the string representation of the GUID.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILoggerBuilderExtensions.WithGuidLogId(TacitusLogger.Builders.ILoggerBuilder,System.Int32)">
            <summary>
            Adds to the logger builder a custom log id generator of type <c>TacitusLogger.LogIdGenerators.GuidLogIdGenerator</c>
            that will use only the substring of the resulting GUID string as a log id. Substring is considered from the beginning of the initial GUID string.
            </summary>
            <param name="self">Logger builder.</param>
            <param name="guidSubstringLength">The length of substring of the initial GUID string from the beginning.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILoggerBuilderExtensions.WithGuidLogId(TacitusLogger.Builders.ILoggerBuilder,System.String,System.Int32)">
            <summary>
            Adds to the logger builder a custom log id generator of type <c>TacitusLogger.LogIdGenerators.GuidLogIdGenerator</c> with the
            specified GUID string format that will use only the substring of the resulting GUID string as a log id. 
            Substring is considered from the beginning of the initial GUID string.
            </summary>
            <param name="self">Logger builder.</param>
            <param name="guidFormat">The guid format that will be used to create the string representation of the GUID.</param>
            <param name="guidSubstringLength">The length of substring of the initial GUID string from the beginning.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILoggerBuilderExtensions.WithNullLogId(TacitusLogger.Builders.ILoggerBuilder)">
            <summary>
            Adds to the logger builder a log id generator of type <c>TacitusLogger.LogIdGenerators.NullLogIdGenerator</c> which simply generates
            NULL string as log ID for every log. 
            </summary>
            <param name="self">Logger builder.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILoggerBuilderExtensions.WithLogCreation(TacitusLogger.Builders.ILoggerBuilder,TacitusLogger.LogCreation,System.Boolean)">
            <summary>
            
            </summary>
            <param name="self">Logger builder.</param>
            <param name="logCreationStrategy"></param>
            <param name="useUtcTime"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILoggerBuilderExtensions.WithExceptionHandling(TacitusLogger.Builders.ILoggerBuilder,TacitusLogger.ExceptionHandling)">
            <summary>
            
            </summary>
            <param name="self">Logger builder.</param>
            <param name="exceptionHandlingStrategy"></param>
            <param name="useUtcTime"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILoggerBuilderExtensions.WithLogLevel(TacitusLogger.Builders.ILoggerBuilder,TacitusLogger.LogLevel)">
            <summary>
            Sets the minimal log level. All logs that have log type
            less than this level will be ignored by the logger.
            </summary>
            <param name="self">Logger builder.</param>
            <param name="logLevel">Log level.</param>
            <returns>Self.</returns>
        </member>
        <member name="T:TacitusLogger.Builders.ILogGroupBuilderExtensions">
            <summary>
            Adds extension methods to <c>TacitusLogger.Builders.ILogGroupBuilder</c> interface and its implementations.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForAllLogs(TacitusLogger.Builders.ILogGroupBuilder)">
            <summary>
            Sets the log group rule predicate to the log group 
            that will consider all logs as eligible to be sent to this log group.
            </summary>
            <param name="self">Log group builder.</param>
            <returns>Log group destinations builder for this log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForLogType(TacitusLogger.Builders.ILogGroupBuilder,TacitusLogger.LogType)">
            <summary>
            Sets the log group rule predicate to the log group 
            that will consider only logs of this type as eligible to be sent to this log group.
            </summary>
            <param name="self">Log group builder.</param>
            <param name="logType">Specified log type.</param>
            <returns>Log group destinations builder for this log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForSuccessLogs(TacitusLogger.Builders.ILogGroupBuilder)">
            <summary>
            Sets the log group rule predicate to the log group 
            that will consider only logs of type Success as eligible to be sent to this log group.
            </summary>
            <param name="self">Log group builder.</param>
            <returns>Log group destinations builder for this log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForInfoLogs(TacitusLogger.Builders.ILogGroupBuilder)">
            <summary>
            Sets the log group rule predicate to the log group 
            that will consider only logs of type Info as eligible to be sent to this log group.
            </summary>
            <param name="self">Log group builder.</param>
            <returns>Log group destinations builder for this log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForEventLogs(TacitusLogger.Builders.ILogGroupBuilder)">
            <summary>
            Sets the log group rule predicate to the log group 
            that will consider only logs of type Event as eligible to be sent to this log group.
            </summary>
            <param name="self">Log group builder.</param>
            <returns>Log group destinations builder for this log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForWarningLogs(TacitusLogger.Builders.ILogGroupBuilder)">
            <summary>
            Sets the log group rule predicate to the log group 
            that will consider only logs of type Warning as eligible to be sent to this log group.
            </summary>
            <param name="self">Log group builder.</param>
            <returns>Log group destinations builder for this log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForFailureLogs(TacitusLogger.Builders.ILogGroupBuilder)">
            <summary>
            Sets the log group rule predicate to the log group 
            that will consider only logs of type Failure as eligible to be sent to this log group.
            </summary>
            <param name="self">Log group builder.</param>
            <returns>Log group destinations builder for this log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForErrorLogs(TacitusLogger.Builders.ILogGroupBuilder)">
            <summary>
            Sets the log group rule predicate to the log group 
            that will consider only logs of type Error as eligible to be sent to this log group.
            </summary>
            <param name="self">Log group builder.</param>
            <returns>Log group destinations builder for this log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForCriticalLogs(TacitusLogger.Builders.ILogGroupBuilder)">
            <summary>
            Sets the log group rule predicate to the log group 
            that will consider only logs of type Critical as eligible to be sent to this log group.
            </summary>
            <param name="self">Log group builder.</param>
            <returns>Log group destinations builder for this log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForLogContext(TacitusLogger.Builders.ILogGroupBuilder,System.String)">
            <summary>
            Sets the log group rule predicate to the log group 
            that will consider only logs with this context as eligible to be sent to this log group.
            Context matching is case-sensitive.
            </summary>
            <param name="self">Log group builder.</param>
            <param name="context">Specified log context.</param> 
            <returns>Log group destinations builder for this log group builder.</returns> 
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.ForLogLevel(TacitusLogger.Builders.ILogGroupBuilder,TacitusLogger.LogLevel)">
            <summary>
            Sets the log group rule predicate that will consider only logs 
            with log type higher than or equal to the specified log level as eligible to be sent to this log group.
            </summary>
            <param name="self">Log group builder.</param>
            <param name="logLevel">Specified log level.</param>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.WithCaching(TacitusLogger.Builders.ILogGroupBuilder,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Adds logs caching. When enabled, caching suspends sending logs to destinations until specified number of 
            them has been collected in cache or specified time in milliseconds has been passed from the previous flush depending which occurs first. After this
            all cached logs are flushed to destinations at the same time.
            </summary>
            <param name="cacheSize">Max size of caching collection after reaching which the cache is pending flushing.</param>
            <param name="cacheTime">Time in milliseconds from the previous flush after which the cache is pending flushing. By default -1 which means cache time check turned off.</param>
            <param name="isActive"></param>
            <returns>Self.</returns> 
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.WithCaching(TacitusLogger.Builders.ILogGroupBuilder,TacitusLogger.Caching.ILogCache,System.Boolean)">
            <summary>
            
            </summary>
            <param name="self"></param>
            <param name="logCache"></param>
            <param name="isActive"></param>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.WithDestinationFeeding(TacitusLogger.Builders.ILogGroupBuilder,TacitusLogger.DestinationFeeding)">
            <summary>
            
            </summary> 
            <param name="destinationFeedingStrategyType"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.WithGreedyDestinationFeeding(TacitusLogger.Builders.ILogGroupBuilder)">
            <summary>
            
            </summary> 
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.Builders.ILogGroupBuilderExtensions.WithFirstSuccessDestinationFeeding(TacitusLogger.Builders.ILogGroupBuilder)">
            <summary>
            
            </summary> 
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions" -->
        <member name="M:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions.WithSimpleTemplateLogText``1(TacitusLogger.Builders.IBuilderWithLogTextSerialization{``0},System.String)">
            <summary>
            Adds a custom log serializer of type <c>TacitusLogger.Serializers.SimpleTemplateLogSerializer</c>
            with the specified log text template.
            </summary>
            <param name="template">String template that will be used to create log text from log model.</param>
            <returns>Self.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions.WithSimpleTemplateLogText``1(TacitusLogger.Builders.IBuilderWithLogTextSerialization{``0})" -->
        <member name="M:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions.WithExtendedTemplateLogText``1(TacitusLogger.Builders.IBuilderWithLogTextSerialization{``0},System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Adds a custom log serializer of type <c>TacitusLogger.Serializers.ExtendedTemplateLogSerializer</c>
            with the specified log text template and JSON serializer settings.
            </summary>
            <param name="template">String template that will be used to create log text from log model.</param>
            <param name="jsonSerializerSettings">JSON serializer settings that will be used to serialize the logging object if present in the template.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions.WithExtendedTemplateLogText``1(TacitusLogger.Builders.IBuilderWithLogTextSerialization{``0},System.String)">
            <summary>
            Adds a custom log serializer of type <c>TacitusLogger.Serializers.ExtendedTemplateLogSerializer</c>
            with the specified log text template and default JSON serializer settings.
            </summary>
            <param name="template">String template that will be used to create log text from log model.</param> 
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions.WithExtendedTemplateLogText``1(TacitusLogger.Builders.IBuilderWithLogTextSerialization{``0})">
            <summary>
            Adds a custom log serializer of type <c>TacitusLogger.Serializers.ExtendedTemplateLogSerializer</c>
            with the default log text template and default JSON serializer settings.
            </summary>
            <returns>Self.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions.WithGeneratorFuncLogText``1(TacitusLogger.Builders.IBuilderWithLogTextSerialization{``0},TacitusLogger.LogModelFunc{System.String})" -->
        <!-- Badly formed XML comment ignored for member "M:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions.WithJsonLogText``1(TacitusLogger.Builders.IBuilderWithLogTextSerialization{``0},TacitusLogger.LogModelFunc{System.Object},Newtonsoft.Json.JsonSerializerSettings)" -->
        <!-- Badly formed XML comment ignored for member "M:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions.WithJsonLogText``1(TacitusLogger.Builders.IBuilderWithLogTextSerialization{``0},TacitusLogger.LogModelFunc{System.Object})" -->
        <member name="M:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions.WithJsonLogText``1(TacitusLogger.Builders.IBuilderWithLogTextSerialization{``0},Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Adds a custom log serializer of type <c>TacitusLogger.Serializers.JsonLogSerializer</c>
            with the specified JSON serializer settings.
            This log serializer results in JSON string of log model as log text.
            </summary>
            <param name="jsonSerializerSettings">JSON serializer settings that will be used to serialize log model.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.IBuilderWithLogTextSerializationExtensions.WithJsonLogText``1(TacitusLogger.Builders.IBuilderWithLogTextSerialization{``0})">
            <summary>
            Adds a custom log serializer of type <c>TacitusLogger.Serializers.JsonLogSerializer</c>
            with the default JSON serializer settings.
            This log serializer results in JSON string of log model as log text.
            </summary>
            <returns>Self.</returns>
        </member>
        <member name="T:TacitusLogger.Builders.ITextWriterDestinationBuilderExtensions">
            <summary>
            Adds extension methods to <c>TacitusLogger.Builders.ITextWriterDestinationBuilder</c> interface and its implementations.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.ITextWriterDestinationBuilderExtensions.WithWriter(TacitusLogger.Builders.ITextWriterDestinationBuilder,System.IO.TextWriter)">
            <summary>
            Adds a custom TextWriter provider of type <c>TacitusLogger.Serializers.TextWriterProvider</c> with the provided
            TextWriter instance.
            </summary>
            <param name="self">TextWriter destination builder.</param> 
            <param name="textWriter">Instance of <c>System.IO.TextWriter</c>.</param>
            <returns>Self.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TacitusLogger.Builders.ITextWriterDestinationBuilderExtensions.WithWriter(TacitusLogger.Builders.ITextWriterDestinationBuilder,TacitusLogger.LogModelFunc{System.IO.TextWriter})" -->
        <member name="T:TacitusLogger.Builders.FileDestinationBuilder">
            <summary>
            Builds the file log destination and adds it to own log group destination builder.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.FileDestinationBuilder.#ctor(TacitusLogger.Builders.ILogGroupDestinationsBuilder)">
            <summary>
            Creates an instance of <c>TacitusLogger.Builders.FileDestinationBuilder</c> using its parent 
            log group destination builder.
            </summary>
            <param name="logGroupDestinationsBuilder">Parent log group destinations builder that will be used to complete build process.</param>
        </member>
        <member name="P:TacitusLogger.Builders.FileDestinationBuilder.LogSerializer">
            <summary>
            Gets the log serializer specified during the build.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.FileDestinationBuilder.LogFilePathGenerator">
            <summary>
            Gets the log file path generator specified during the build.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.FileDestinationBuilder.WithLogSerializer(TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Adds a custom log serializer of type <c>TacitusLogger.Serializers.ILogSerializer</c>
            that will be used to generate log model text representation. If omitted, the default log serializer
            of type <c>TacitusLogger.Serializers.ExtendedTemplateLogSerializer</c> with the default template will be added.
            </summary>
            <param name="logSerializer">Log serializer.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.FileDestinationBuilder.WithPath(TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Adds a custom log file path generator of type <c>TacitusLogger.Serializers.ILogSerializer</c>
            that will be used to generate log file path using log model. If omitted, the default log serializer
            of type <c>TacitusLogger.Serializers.FilePathTemplateLogSerializer</c> with the default template will be added.
            </summary>
            <param name="filePathGenerator">Log file path generator.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.FileDestinationBuilder.Add">
            <summary>
            Completes log destination build process by adding it to the parent log group destination builder.
            </summary>
            <returns>The parent log group destination builder.</returns>
        </member>
        <member name="T:TacitusLogger.Builders.LogContributorsBuilder">
            <summary>
            Builds a list of log contributors for the given logger builder.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.LogContributorsBuilder.#ctor(System.Func{System.Collections.Generic.IList{TacitusLogger.Contributors.LogContributorBase},TacitusLogger.Builders.ILoggerBuilder})">
            <summary>
            Creates an instance of <c>TacitusLogger.Builders.LogContributorsBuilder</c> using build callback.
            </summary>
            <param name="buildCallback">The build callback delegate used to complete the log contributors building process.</param>
        </member>
        <member name="P:TacitusLogger.Builders.LogContributorsBuilder.BuildCallback">
            <summary>
            Gets build callback that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LogContributorsBuilder.LogContributors">
            <summary>
            The list of log contributors that was created during the build process.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.LogContributorsBuilder.Custom(TacitusLogger.Contributors.LogContributorBase,TacitusLogger.Setting{System.Boolean})">
            <summary>
            Adds a new log contributor of type <c>TacitusLogger.Contributors.ILogContributor</c> to the builder.
            </summary>
            <param name="logContributor">Log contributor.</param>
            <param name="isActive"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LogContributorsBuilder.BuildContributors">
            <summary>
            Completes the log contributors build process.
            </summary>
            <returns>Logger builder.</returns>
        </member>
        <member name="T:TacitusLogger.Builders.LoggerBuilder">
            <summary>
            Builds an instance of <c>TacitusLogger.Logger</c> which implements the <c>TacitusLogger.ILogger</c> interface.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.#ctor(System.String)">
            <summary>
            Creates an instance of <c>TacitusLogger.Builders.LoggerBuilder</c>.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LoggerBuilder.LoggerName">
            <summary>
            Gets the logger name specified during the build.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LoggerBuilder.LogIdGenerator">
            <summary>
            Gets the log id generator specified during the build.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LoggerBuilder.LogGroups">
            <summary>
            Gets the log groups added to this logger builder.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LoggerBuilder.LogContributors">
            <summary>
            Gets the log contributors added to this logger builder.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LoggerBuilder.LogTransformers">
            <summary>
            Gets the log transformers added to this logger builder.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LoggerBuilder.LogCreationStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LoggerBuilder.ExceptionHandlingStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LoggerBuilder.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LoggerBuilder.DiagnosticsDestination">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LoggerBuilder.RecordConfigurationAfterBuild">
            <summary>
            
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.Logger">
            <summary>
            Begins the logger building steps by creating and returning a new logger builder instance.
            </summary>
            <returns>A new instance of <c>TacitusLogger.Builders.LoggerBuilder</c>.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.Logger(System.String)">
            <summary>
            Begins the logger building steps by creating and returning a new logger builder instance with
            specified name. This name will appear in log model as Source property.
            </summary>
            <param name="name">Name for this logger.</param>
            <returns>A new instance of <c>TacitusLogger.Builders.LoggerBuilder</c>.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.WithLogLevel(TacitusLogger.Setting{TacitusLogger.LogLevel})">
            <summary>
            Sets the minimal log level. All logs that have log type
            less than this level will be ignored by the logger.
            </summary>
            <param name="logLevel">Log level.</param>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.WithLogIdGenerator(TacitusLogger.LogIdGenerators.ILogIdGenerator)">
            <summary>
            Add a log id generator to the logger builder.
            </summary>
            <param name="logIdGenerator">Log id generator that will be used to generate ids for new logs.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.WithLogCreation(TacitusLogger.Strategies.LogCreation.LogCreationStrategyBase)">
            <summary>
            
            </summary>
            <param name="logCreationStrategy"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.WithExceptionHandling(TacitusLogger.Strategies.ExceptionHandling.ExceptionHandlingStrategyBase)">
            <summary>
            
            </summary>
            <param name="exceptionHandlingStrategy"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.WithDiagnostics(TacitusLogger.Destinations.ILogDestination)">
            <summary>
            
            </summary>
            <param name="diagnosticsDestination"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.Contributors">
            <summary>
            Begins log contributors building steps by creating and returning a new instance of <c>TacitusLogger.Builders.ILogContributorsBuilder</c>
            Log contributors are used to add arbitrary data in the form of log attachments to the log model.
            </summary>
            <returns>Log contributors builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.Transformers">
            <summary>
            Begins log transformers building steps by creating and returning a new instance of <c>TacitusLogger.Builders.ILogTransformersBuilder</c>
            Log transformers are used to modify log models before they are sent to log groups.
            </summary>
            <returns>Log transformers builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.NewLogGroup(System.String)">
            <summary>
            Begins log group building steps by creating and returning a new instance of <c>TacitusLogger.Builders.ILogGroupBuilder</c>
            with the specified log group name.
            </summary>
            <param name="logGroupName">The name of the building log group.</param>
            <returns>A new log group builder.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.NewLogGroup">
            <summary>
            Begins log group building steps by creating and returning a new instance of <c>ILogGroupBuilder.TacitusLogger.Builders</c>.
            </summary> 
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.BuildLogger">
            <summary>
            Finishes the build process by building a ready-to-use instance of the <c>TacitusLogger.ILogger</c> interface.
            </summary>
            <returns>Built logger.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.NewLogGroup(TacitusLogger.LogGroupBase)">
            <summary>
            Used to add an instance of <c>TacitusLogger.ILogGroup</c> to the logger builder.
            </summary>
            <param name="logGroup">Log group.</param>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.LogContributorsBuildCallback(System.Collections.Generic.IList{TacitusLogger.Contributors.LogContributorBase})">
            <summary>
            Finishes the log contributors building. 
            </summary>
            <param name="logContributors"></param>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.Builders.LoggerBuilder.LogTransformersBuildCallback(System.Collections.Generic.IList{TacitusLogger.Transformers.LogTransformerBase})">
            <summary>
            Finishes the log transformers building. 
            </summary>
            <param name="logTransformers"></param>
            <returns></returns>
        </member>
        <member name="T:TacitusLogger.Builders.LogGroupBuilder">
            <summary>
            Builds a log group for the given logger builder.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.LogGroupBuilder.#ctor(System.String,System.Func{TacitusLogger.LogGroupBase,TacitusLogger.Builders.ILoggerBuilder})">
            <summary>
            Creates an instance of <c>TacitusLogger.Builders.LogGroupBuilder</c> using log group name
            and logger builder instance.
            </summary>
            <param name="logGroupName">Log group name</param>
            <param name="buildCallback">The build callback delegate used to complete the log group building process.</param>
        </member>
        <member name="P:TacitusLogger.Builders.LogGroupBuilder.BuildCallback">
            <summary>
            Gets an instance of build callback specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LogGroupBuilder.Rule">
            <summary>
            Get the log group rule specified during the build.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LogGroupBuilder.Name">
            <summary>
            Gets the log group name specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LogGroupBuilder.LogGroupStatus">
            <summary>
            Gets if the log group is marked an active or not.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LogGroupBuilder.LogCache">
            <summary>
            Gets the log cache specified during the build.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LogGroupBuilder.CachingIsActive">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LogGroupBuilder.DestinationFeedingStrategy">
            <summary>
            Gets the destination feeding strategy specified during the build.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.LogGroupBuilder.ForRule(TacitusLogger.LogModelFunc{System.Boolean})">
            <summary>
            Sets the log group rule predicate of type <c>TacitusLogger.LogModelPredicate</c> that will be used to 
            decide whether or not the given log is eligible to be send to this log group.
            </summary>
            <param name="rule">The log group rule predicate.</param>
            <returns>Log group destination builder that is used to setups the log destinations of the given log group.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LogGroupBuilder.SetStatus(TacitusLogger.Setting{TacitusLogger.LogGroupStatus})">
            <summary>
            Sets if the log group is active or not. Only active groups are used by logger to save 
            logs. If omitted, the log group is considered active by default.
            </summary>
            <param name="isActive"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LogGroupBuilder.WithCaching(TacitusLogger.Caching.ILogCache,System.Boolean)">
            <summary>
            Adds logs caching. When enabled, log cache suspends sending logs to destination until some time in future depending
            on its implementation logic.
            </summary>
            <param name="logCache">Log cache.</param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LogGroupBuilder.WithDestinationFeeding(TacitusLogger.Strategies.DestinationFeeding.DestinationFeedingStrategyBase)">
            <summary>
            
            </summary>
            <param name="destinationFeedingStrategy"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LogGroupBuilder.CreateLogGroup(System.Collections.Generic.List{TacitusLogger.Destinations.ILogDestination})">
            <summary>
            Creates the log group using specified log destinations, adds the created log 
            group to logger builder and returns it.
            </summary>
            <param name="logDestinations">Log destinations list.</param>
            <returns>Logger builder.</returns>
        </member>
        <member name="T:TacitusLogger.Builders.LogGroupDestinationsBuilder">
            <summary>
            Setups the log destinations of the given log group.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.LogGroupDestinationsBuilder.#ctor(System.Func{System.Collections.Generic.List{TacitusLogger.Destinations.ILogDestination},TacitusLogger.Builders.ILoggerBuilder})">
            <summary>
            Creates an instance of <c>TacitusLogger.Builders.LogGroupDestinationsBuilder</c> using specified
            log group builder.
            </summary>
            <param name="logGroupBuilder">the log group builder.</param>
        </member>
        <member name="P:TacitusLogger.Builders.LogGroupDestinationsBuilder.BuildCallback">
            <summary>
            Gets the build callback that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LogGroupDestinationsBuilder.LogDestinations">
            <summary>
            Gets the list of log destinations that was added to this builder.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.LogGroupDestinationsBuilder.CustomDestination(TacitusLogger.Destinations.ILogDestination)">
            <summary>
            Adds a custom log destination to the builder.
            </summary>
            <param name="logDestination">Log destination to add.</param>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.Builders.LogGroupDestinationsBuilder.BuildLogGroup">
            <summary>
            Creates the log group an add it to the logger builder.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TacitusLogger.Builders.LogTransformersBuilder">
            <summary>
            Builds a list of log transformers for the given logger builder.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.LogTransformersBuilder.#ctor(System.Func{System.Collections.Generic.IList{TacitusLogger.Transformers.LogTransformerBase},TacitusLogger.Builders.ILoggerBuilder})">
            <summary>
            Creates an instance of <c>TacitusLogger.Builders.LogTransformersBuilder</c> using build callback.
            </summary>
            <param name="buildCallback">The build callback delegate used to complete the log transformers building process.</param>
        </member>
        <member name="P:TacitusLogger.Builders.LogTransformersBuilder.BuildCallback">
            <summary>
            Gets build callback that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.LogTransformersBuilder.LogTransformers">
            <summary>
            The list of log transformers that was created during the build process.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.LogTransformersBuilder.Custom(TacitusLogger.Transformers.LogTransformerBase,TacitusLogger.Setting{System.Boolean})">
            <summary>
            Adds a new log transformer of type <c>TacitusLogger.Transformers.ILogTransformer</c> to the builder.
            </summary>
            <param name="logTransformer">Log transformer.</param>
            <param name="isActive"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.LogTransformersBuilder.BuildTransformers">
            <summary>
            Completes the log transformers build process.
            </summary>
            <returns>Logger builder.</returns>
        </member>
        <member name="T:TacitusLogger.Builders.TextWriterDestinationBuilder">
            <summary>
            Builds and adds an instance of <c>TacitusLogger.Destinations.TextWriterDestination</c> class to the <c>TacitusLogger.Builders.ILogGroupDestinationsBuilder</c>
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.TextWriterDestinationBuilder.#ctor(TacitusLogger.Builders.ILogGroupDestinationsBuilder)">
            <summary>
            Creates an instance of <c>TacitusLogger.Builders.TextWriterDestination</c> using parent <c>ILogGroupDestinationsBuilder</c> instance.
            </summary>
            <param name="logGroupDestinationsBuilder">Parent log group destinations builder that will be used to complete build process.</param>
        </member>
        <member name="P:TacitusLogger.Builders.TextWriterDestinationBuilder.LogSerializer">
            <summary>
            Gets the log serializer that was specified during the build process.
            </summary>
        </member>
        <member name="P:TacitusLogger.Builders.TextWriterDestinationBuilder.TextWriterProvider">
            <summary>
            Gets the TextWriter provider that was specified during the build process.
            </summary>
        </member>
        <member name="M:TacitusLogger.Builders.TextWriterDestinationBuilder.WithLogSerializer(TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Adds a custom log serializer of type <c>TacitusLogger.Serializers.ILogSerializer</c>
            that will be used to generate log model text representation. If omitted, the default log serializer
            of type <c>TacitusLogger.Serializers.SimpleTemplateLogSerializer</c> with the default template will be added.
            </summary>
            <param name="logSerializer"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.TextWriterDestinationBuilder.WithWriter(TacitusLogger.Destinations.TextWriter.ITextWriterProvider)">
            <summary>
            Adds a custom TextWriter provider of type <c>TacitusLogger.Providers.ITextWriterProvider</c>
            that will be used to get the right TextWriter to write to. This dependency is mandatory, building without providing
            it will result in <c>InvalidOperationException</c>.
            </summary>
            <param name="textWriterProvider"></param>
            <returns>Self.</returns>
        </member>
        <member name="M:TacitusLogger.Builders.TextWriterDestinationBuilder.Add">
            <summary>
            Completes log destination build process by adding it to the parent log group destination builder.
            </summary>
            <returns>The parent log group destination builder.</returns>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.LogModelTemplateResolver">
            <summary>
            Used to create strings representation of log model using the template string
            and the list of placeholder resolvers of type <c>TacitusLogger.Components.TemplateResolving.IPlaceholderResolver</c>
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.LogModelTemplateResolver.#ctor(System.Collections.Generic.IList{TacitusLogger.Components.TemplateResolving.IPlaceholderResolver})">
            <summary>
            Creates an instance of <c>TacitusLogger.Components.TemplateResolving.LogModelTemplateResolver</c> using
            specified list of placeholder resolvers.
            </summary>
            <param name="placeholderResolvers">The list of placeholder resolvers.</param>
        </member>
        <member name="P:TacitusLogger.Components.TemplateResolving.LogModelTemplateResolver.PlaceholderResolvers">
            <summary>
            Gets placeholder resolvers list specified during initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.LogModelTemplateResolver.Resolve(TacitusLogger.LogModel,System.String)">
            <summary>
            Creates a serialized string using provided log model and template string.
            </summary>
            <param name="logModel">Log model</param>
            <param name="template">Template string</param>
            <returns>Created string.</returns>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.ContextPlaceholderResolver">
            <summary>
            Used to resolve $Context placeholder from the template string using log model.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.ContextPlaceholderResolver.#ctor">
            <summary>
            Creates an instance of <c>TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.ContextPlaceholderResolver</c>
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.ContextPlaceholderResolver.Resolve(TacitusLogger.LogModel,System.String@)">
            <summary>
            Finds all occurrences of $Context placeholder and replaces them with 
            the value of Context property of log model or with its substring.
            </summary>
            <param name="logModel">Log model.</param>
            <param name="template">The given template.</param>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.DescriptionPlaceholderResolver">
            <summary>
            Used to resolve $Description placeholder from the template string using log model.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.DescriptionPlaceholderResolver.#ctor">
            <summary>
            Creates an instance of <c>TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.DescriptionPlaceholderResolver</c>
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.DescriptionPlaceholderResolver.Resolve(TacitusLogger.LogModel,System.String@)">
            <summary>
            Finds all occurrences of $Description placeholder and replaces them with 
            the value of Description property of log model or with its substring.
            </summary>
            <param name="logModel">Log model.</param>
            <param name="template">The given template.</param>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogDatePlaceholderResolver">
            <summary>
            Used to resolve $LogDate placeholder from the template string using log model.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogDatePlaceholderResolver.#ctor(System.String)">
            <summary>
            Creates an instance of <c>TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogDatePlaceholderResolver</c>
            using default date format string.
            </summary>
            <param name="defaultDateFormat">Will be used when $LogDate placeholder is given without date format.</param>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogDatePlaceholderResolver.Resolve(TacitusLogger.LogModel,System.String@)">
            <summary>
            Finds all occurrences of $LogDate placeholder and replaces them with 
            the string representation of LogDate property of log model.
            </summary>
            <param name="logModel">Log model.</param>
            <param name="template">The given template.</param>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogIdPlaceholderResolver">
            <summary>
            Used to resolve $LogId placeholder from the template string using log model.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogIdPlaceholderResolver.#ctor">
            <summary>
            Creates an instance of <c>TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogIdPlaceholderResolver</c>
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogIdPlaceholderResolver.Resolve(TacitusLogger.LogModel,System.String@)">
            <summary>
            Finds all occurrences of $LogId placeholder and replaces them with 
            the value of LogId property of log model or with its substring.
            </summary>
            <param name="logModel">Log model.</param>
            <param name="template">The given template.</param>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogItemsPlaceholderResolver">
            <summary>
            Used to resolve $LogItems placeholder from the template string using log model.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogItemsPlaceholderResolver.#ctor(TacitusLogger.Components.Json.IJsonSerializerFacade@,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Creates an instance of <c>TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogItemsPlaceholderResolver</c>
            using JSON serializer settings.
            </summary>
            <param name="jsonSerializerFacade">JSON serializer facade that will be used for serialization.</param>
            <param name="jsonSerializerSettings">JSON serializer settings.</param>
        </member>
        <member name="P:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogItemsPlaceholderResolver.JsonSerializerSettings">
            <summary>
            Gets the JSON serializer settings specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogItemsPlaceholderResolver.JsonSerializerFacade">
            <summary>
            Gets the JSON serializer facade that was specified during the initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogItemsPlaceholderResolver.Resolve(TacitusLogger.LogModel,System.String@)">
            <summary>
            Finds all occurrences of $LoggingObject placeholder and replaces them with 
            the JSON representation of LoggingObject property of log model or with its substring.
            </summary>
            <param name="logModel">Log model.</param>
            <param name="template">The given template.</param>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogTypePlaceholderResolver">
            <summary>
            Used to resolve $LogType placeholder from the template string using log model.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogTypePlaceholderResolver.#ctor">
            <summary>
            Creates an instance of <c>TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogTypePlaceholderResolver</c>
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.LogTypePlaceholderResolver.Resolve(TacitusLogger.LogModel,System.String@)">
            <summary>
            Finds all occurrences of $LogType placeholder in the template and replaces them with 
            the text representation of LogType property of log model or with its substring.
            </summary>
            <param name="logModel">Log model.</param>
            <param name="template">The given template.</param>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.NewLinePlaceholderResolver">
            <summary>
            Used to resolve $NewLine placeholder from the template string using log model.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.NewLinePlaceholderResolver.#ctor">
            <summary>
            Creates an instance of <c>TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.NewLinePlaceholderResolver</c>
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.NewLinePlaceholderResolver.Resolve(TacitusLogger.LogModel,System.String@)">
            <summary>
            Finds all occurrences of $NewLine placeholder in the template and replaces them with 
            the platform-specific new line string.
            </summary>
            <param name="logModel">Log model.</param>
            <param name="template">The given template.</param>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.PlaceholderWithDateFormatResolverBase">
            <summary>
            Used as a base class for all placeholders which contain date format.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.PlaceholderWithDateFormatResolverBase.#ctor(System.String)">
            <summary>
            Initializes the base class <c>TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.PlaceholderWithDateFormatResolverBase</c>
            using default date format string.
            </summary>
            <param name="defaultDateFormat">Default date format.</param>
        </member>
        <member name="P:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.PlaceholderWithDateFormatResolverBase.DefaultDateFormat">
            <summary>
            Gets the default date format string specified during the initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.PlaceholderWithDateFormatResolverBase.GetDateString(System.DateTime,System.String)">
            <summary>
            Extracts the date format from the template, and if exists returns the date string representation
            using that format, otherwise, uses the default date format.
            </summary>
            <param name="value"></param>
            <param name="valueFromTemplate"></param>
            <returns></returns>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.PlaceholderWithSubstringResolverBase">
            <summary>
            Used as a base class for all placeholders which could contain substring length.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.PlaceholderWithSubstringResolverBase.GetFullStringOrSubstring(System.String,System.String)">
            <summary>
            Extracts the substring length information from the template, and if exists, returns the substring of value
            of that length, otherwise, returns the full value string.
            </summary>
            <param name="value"></param>
            <param name="valueFromTemplate"></param>
            <returns></returns>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.SourcePlaceholderResolver">
            <summary>
            Used to resolve $Source placeholder from the template string using log model.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.SourcePlaceholderResolver.#ctor">
            <summary>
            Creates an instance of <c>TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.SourcePlaceholderResolver</c>
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.SourcePlaceholderResolver.Resolve(TacitusLogger.LogModel,System.String@)">
            <summary>
            Finds all occurrences of $Source placeholder and replaces them with 
            the value of Source property of log model or with its substring.
            </summary>
            <param name="logModel">Log model.</param>
            <param name="template">The given template.</param>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.TagsPlaceholderResolver">
            <summary>
            Used to resolve $Tags placeholder from the template string using log model.
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.TagsPlaceholderResolver.#ctor">
            <summary>
            Creates an instance of <c>TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.TagsPlaceholderResolver</c>.
            </summary> 
        </member>
        <member name="P:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.TagsPlaceholderResolver.MainRegex">
            <summary>
            Gets the object representing regular expression used for this resolver. For testing purposes. 
            </summary>
        </member>
        <member name="M:TacitusLogger.Components.TemplateResolving.PlaceholderResolvers.TagsPlaceholderResolver.Resolve(TacitusLogger.LogModel,System.String@)">
            <summary>
            Finds all occurrences of $Tags placeholder and replaces them with space separated list of tags.
            </summary>
            <param name="logModel">Log model.</param>
            <param name="template">The given template.</param>
        </member>
        <member name="T:TacitusLogger.Components.TemplateResolving.IPlaceholderResolver">
            <summary>
            Represents the interface which should be implemented by all placeholder resolvers.
            </summary> 
        </member>
        <member name="T:TacitusLogger.Contributors.UserDataContributor">
            <summary>
            Allows to add log items to generated logs.
            </summary>
        </member>
        <member name="M:TacitusLogger.Contributors.UserDataContributor.#ctor(System.String,System.Object)">
            <summary>
            Creates an instance of <c>TacitusLogger.Contributors.UserDataContributor</c>
            </summary>
            <param name="name">Log attachment name.</param>
            <param name="data">Custom log item data.</param>
        </member>
        <member name="P:TacitusLogger.Contributors.UserDataContributor.Data">
            <summary>
            Gets the data that was specified during the initialization. For testing purposes.
            </summary>
        </member>
        <member name="T:TacitusLogger.Destinations.Console.ConsoleDestination">
            <summary>
            Destination that writes log model to the standard output device.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.#ctor(TacitusLogger.Serializers.ILogSerializer,System.Collections.Generic.IDictionary{TacitusLogger.LogType,System.ConsoleColor})">
            <summary>     
            Initializes a new instance of the TacitusLogger.Destinations.ConsoleDestination class using 
            log serializer and custom color scheme.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logSerializer"/> or <paramref name="colorScheme"/> is null.</exception>
            <param name="logSerializer">Log serializer.</param>
            <param name="colorScheme">Color scheme.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.#ctor(TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.ConsoleDestination class using 
            log serializer.
            </summary> 
            <exception cref="T:System.ArgumentNullException">If <paramref name="logSerializer"/> is null.</exception>
            <param name="logSerializer">Log serializer.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.ConsoleDestination class using 
            log string template.
            </summary> 
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringTemplate"/> is null.</exception>
            <param name="logStringTemplate">Log string template.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.#ctor(System.String,System.Collections.Generic.Dictionary{TacitusLogger.LogType,System.ConsoleColor})">
            <summary>        
            Initializes a new instance of the TacitusLogger.Destinations.ConsoleDestination class using 
            log string template and default color scheme.
            </summary> 
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringTemplate"/> or <paramref name="colorScheme"/> is null.</exception>
            <param name="logStringTemplate">Log string template.</param>
            <param name="colorScheme">Color scheme.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.#ctor(TacitusLogger.LogModelFunc{System.String})">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.ConsoleDestination class using 
            log string factory method.
            </summary> 
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringFactoryMethod"/> is null.</exception>
            <param name="logStringFactoryMethod">Log string factory method.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.#ctor(TacitusLogger.LogModelFunc{System.String},System.Collections.Generic.Dictionary{TacitusLogger.LogType,System.ConsoleColor})">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.ConsoleDestination class using 
            log string factory method and default color scheme.
            </summary> 
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringFactoryMethod"/> or <paramref name="colorScheme"/> is null.</exception>
            <param name="logStringFactoryMethod">Log string factory method.</param>
            <param name="colorScheme">Color scheme.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.#ctor">
            <summary> 
            Initializes a new instance of the TacitusLogger.Destinations.ConsoleDestination class.
            </summary>
        </member>
        <member name="P:TacitusLogger.Destinations.Console.ConsoleDestination.LogSerializer">
            <summary>
            Gets the log serializer that was provided during initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Destinations.Console.ConsoleDestination.ColorScheme">
            <summary>
            Gets the color scheme.
            </summary>
        </member>
        <member name="P:TacitusLogger.Destinations.Console.ConsoleDestination.ConsoleFacade">
            <summary>
            Gets the console facade that was provided during initialization. 
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.GetDefaultColorScheme">
            <summary>
            Get the default color scheme.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.Send(TacitusLogger.LogModel[])">
            <summary>
            Writes log model to the destination.
            </summary>
            <param name="logs">Log models collection.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.SendAsync(TacitusLogger.LogModel[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes log model to the destination.
            </summary> 
            <param name="logs">Log models collection.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.ConsoleDestination.ResetConsoleFacade(TacitusLogger.Destinations.IColoredOutputDeviceFacade)">
            <summary>
            Resets default console facade to provided one.
            Mostly for use during testing.
            </summary>
            <param name="consoleFacade">New console facade</param>
        </member>
        <member name="T:TacitusLogger.Destinations.Console.StandardColorConsoleFacade">
            <summary>
            A facade to the standard output device
            This class is internal.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.StandardColorConsoleFacade.WriteLine(System.String,System.ConsoleColor)">
            <summary>
            Writes to the standard output device.
            </summary>
            <param name="text">Text to be written.</param>
            <param name="color">Text color.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Console.StandardColorConsoleFacade.WriteLineAsync(System.String,System.ConsoleColor,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes to the standard output device.
            </summary>
            <param name="text">Text to be written.</param>
            <param name="color">Text color</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:TacitusLogger.Destinations.Debug.DebugConsoleFacade">
            <summary>
            A facade for System.Diagnostics.Debug.
            This class is internal.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.Debug.DebugConsoleFacade.WriteLine(System.String)">
            <summary>
            Writes the <paramref name="text"/> to the <c>System.Diagnostics.Debug.</c>
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:TacitusLogger.Destinations.Debug.DebugConsoleFacade.WriteLineAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes the <paramref name="text"/> to the <c>System.Diagnostics.Debug.</c>
            </summary>
            <param name="text"></param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:TacitusLogger.Destinations.Debug.DebugDestination">
            <summary>
            Destination that writes log model to System.Diagnostics.Debug.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.Debug.DebugDestination.#ctor(TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.DebugDestination class using 
            log serializer.
            </summary>
            <exception cref="!:ArgumentNullException">If <paramref name="logSerializer"/> is null.</exception>
            <param name="logSerializer">Log serializer.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Debug.DebugDestination.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.DebugDestination class using 
            log string template.
            </summary>        
            <exception cref="!:ArgumentNullException">If <paramref name="logStringTemplate"/> is null.</exception>
            /// <param name="logStringTemplate">Log string template.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Debug.DebugDestination.#ctor(TacitusLogger.LogModelFunc{System.String})">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.DebugDestination class using 
            log string factory method.
            </summary>    
            <exception cref="!:ArgumentNullException">If <paramref name="logStringFactoryMethod"/> is null.</exception>
            <param name="logStringFactoryMethod">Log string factory method</param>
        </member>
        <member name="M:TacitusLogger.Destinations.Debug.DebugDestination.#ctor">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.DebugDestination class using 
            default log serializer.
            </summary>
            
        </member>
        <member name="T:TacitusLogger.Destinations.File.FileDestination">
            <summary>
            Destination that writes log model to file system.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(TacitusLogger.Serializers.ILogSerializer,TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            log serializer and log file path generator.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logSerializer"/> or <paramref name="filePathGenerator"/> is null.</exception>
            <param name="logSerializer">Log serializer.</param>
            <param name="filePathGenerator">Log file path generator.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(System.String,Newtonsoft.Json.JsonSerializerSettings,TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
             log string template, custom json serializer settings and log file path generator.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringTemplate"/> or <paramref name="filePathGenerator"/> is null.</exception>
            <param name="logStringTemplate">Log string template.</param>
            <param name="jsonSerializerSettings">Json serializer settings.</param>
            <param name="filePathGenerator">Log file path generator.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(System.String,TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            log string template and log file path generator.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringTemplate"/> or <paramref name="filePathGenerator"/> is null.</exception>
            <param name="logStringTemplate">Log string template.</param>
            <param name="filePathGenerator">Log file path generator.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(TacitusLogger.Serializers.ILogSerializer)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using log file path generator.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="filePathGenerator"/> is null.</exception>
            <param name="filePathGenerator">Log file path generator.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(TacitusLogger.Serializers.ILogSerializer,System.String)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            log serializer and log file path generator.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logSerializer"/> or <paramref name="filePathGenerator"/> is null.</exception>
            <param name="logSerializer">Log serializer.</param>
            <param name="filePathTemplate">File path template.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(System.String,Newtonsoft.Json.JsonSerializerSettings,System.String)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            log string template, custom json serializer settings and log file path template.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringTemplate"/> or <paramref name="filePathTemplate"/> is null.</exception>
            <param name="logStringTemplate">Log string template.</param>
            <param name="jsonSerializerSettings">Json serializer settings.</param>
            <param name="filePathTemplate">Log file path template.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            log string template and log file path template.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringTemplate"/> or <paramref name="filePathTemplate"/> is null.</exception>
            <param name="logStringTemplate">Log string template.</param> 
            <param name="filePathTemplate">Log file path template.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            log file path template.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="filePathTemplate"/> is null.</exception>
            <param name="filePathTemplate">Log file path template.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(TacitusLogger.LogModelFunc{System.String},System.String)">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            log string factory method and default log file path template.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringFactoryMethod"/> or <paramref name="filePathTemplate"/> is null.</exception>
            <param name="logStringFactoryMethod">Log string factory method.</param>
            <param name="filePathTemplate">Log file path template.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(System.String,TacitusLogger.LogModelFunc{System.String})">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            log string template and file path factory method.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringTemplate"/> or <paramref name="filePathFactoryMethod"/> is null.</exception>
            <param name="logStringTemplate">Log string template.</param>
            <param name="filePathFactoryMethod">File path factory method.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(System.String,Newtonsoft.Json.JsonSerializerSettings,TacitusLogger.LogModelFunc{System.String})">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            log string template, json serializer settings and file path factory method.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringTemplate"/> or <paramref name="filePathFactoryMethod"/> is null.</exception>
            <param name="logStringTemplate">Log string template.</param>
            <param name="jsonSerializerSettings">Json serializer settings.</param>
            <param name="filePathFactoryMethod">File path factory method.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor(TacitusLogger.LogModelFunc{System.String},TacitusLogger.LogModelFunc{System.String})">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            log string factory method and file path factory method.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logStringFactoryMethod"/> or <paramref name="filePathFactoryMethod"/> is null.</exception>
            <param name="logStringFactoryMethod">Log string factory method</param>
            <param name="filePathFactoryMethod">File path factory method</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.#ctor">
            <summary>
            Initializes a new instance of the TacitusLogger.Destinations.FileDestination class using 
            default log serializer and default log file path generator.
            </summary>
        </member>
        <member name="P:TacitusLogger.Destinations.File.FileDestination.FileSystemFacade">
            <summary>
            Gets the file system facade that was provided during initialization. 
            </summary>
        </member>
        <member name="P:TacitusLogger.Destinations.File.FileDestination.LogSerializer">
            <summary> 
            Gets the log serializer that was provided during initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Destinations.File.FileDestination.LogFilePathGenerator">
            <summary>
            Gets the log file path generator that was provided during initialization. 
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.Send(TacitusLogger.LogModel[])">
            <summary>
            Writes log model to the destination.
            </summary>
            <param name="logs">Log model collection.</param> 
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.SendAsync(TacitusLogger.LogModel[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes log model to the destination.
            </summary>
            <param name="logs">Log model collection.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:TacitusLogger.Destinations.File.FileDestination.ResetFileSystemFacade(TacitusLogger.Destinations.File.IFileSystemFacade)">
            <summary>
            Resets default file system facade to provided one.
            Mostly for use during testing.
            </summary>
            <param name="consoleFacade">New file system facade</param>
        </member>
        <member name="T:TacitusLogger.Destinations.File.IFileSystemFacade">
            <summary>
            An interface defining a facade to file system.
            This interface is internal.
            </summary>
        </member>
        <member name="T:TacitusLogger.Destinations.File.StandardFileSystemFacade">
            <summary>
            A facade for file system.
            This class is internal.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.File.StandardFileSystemFacade.AppendToFile(System.String,System.String)">
            <summary>
            Opens (creates if it does not exist) the file with the specified file path, writes the specified text to it's end and closes the file.
            </summary>
            <param name="filePath">Full path to the file.</param>
            <param name="text">Text to be append to file.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.File.StandardFileSystemFacade.AppendToFileAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary> 
            Asynchronously opens (creates if it does not exist) the file with the specified file path, writes the specified text to it's end and closes the file.
            </summary>
            <param name="filePath">Full path to the file.</param>
            <param name="text">Text to be append to file.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:TacitusLogger.Destinations.IColoredOutputDeviceFacade">
            <summary>
            An interface defining a facade to the standard output device.
            This interface is internal.
            </summary>
        </member>
        <member name="T:TacitusLogger.Destinations.ILogDestination">
            <summary>
            Represents an interface which all log destinations should implement.
            </summary>
        </member>
        <member name="T:TacitusLogger.Destinations.IOutputDeviceFacade">
            <summary>
            An interface defining a facade to the standard output device. 
            </summary>
        </member>
        <member name="T:TacitusLogger.Destinations.NetDiagnosticsLogDestinationBase">
            <summary>
            Base class for log destinations that write to destinations from System.Diagnostics.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.NetDiagnosticsLogDestinationBase.#ctor(TacitusLogger.Serializers.ILogSerializer,TacitusLogger.Destinations.IOutputDeviceFacade)">
            <summary>
            Initialize base class with log serializer and console facade.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="logSerializer"/> or <paramref name="consoleFacade"/> is null.</exception>
            <param name="logSerializer">Log serializer.</param>
            <param name="consoleFacade">Console facade.</param>
        </member>
        <member name="P:TacitusLogger.Destinations.NetDiagnosticsLogDestinationBase.LogSerializer">
            <summary>
            Gets the log serializer that was provided during initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Destinations.NetDiagnosticsLogDestinationBase.ConsoleFacade">
            <summary>
            Gets the console facade that was provided during initialization. 
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.NetDiagnosticsLogDestinationBase.Send(TacitusLogger.LogModel[])">
            <summary>
            Writes log model to the destination.
            </summary>
            <param name="logs">Log models collection.</param>
        </member>
        <member name="M:TacitusLogger.Destinations.NetDiagnosticsLogDestinationBase.SendAsync(TacitusLogger.LogModel[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes log model to the destination.
            </summary>
            <param name="logs">Log models collection.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:TacitusLogger.Destinations.NetDiagnosticsLogDestinationBase.ResetConsoleFacade(TacitusLogger.Destinations.IOutputDeviceFacade)">
            <summary>
            Resets default console facade to provided one.
            Mostly for use during testing.
            </summary>
            <param name="consoleFacade">New console facade</param>
        </member>
        <member name="T:TacitusLogger.Destinations.TextWriter.FactoryMethodTextWriterProvider">
            <summary>
            Implements the <c>TacitusLogger.Providers.ITextWriterProvider</c> interface by providing <c>System.IO.TextWriter</c>
            using special factory method specified during the initialization.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TacitusLogger.Destinations.TextWriter.FactoryMethodTextWriterProvider.#ctor(TacitusLogger.LogModelFunc{System.IO.TextWriter})" -->
        <member name="P:TacitusLogger.Destinations.TextWriter.FactoryMethodTextWriterProvider.FactoryMethod">
            <summary>
            Gets the factory method specified during the initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.TextWriter.FactoryMethodTextWriterProvider.GetTextWriter(TacitusLogger.LogModel)">
            <summary>
            Gets the <c>System.IO.TextWriter</c> instance using log model.
            </summary>
            <param name="logModel">Log model.</param>
            <returns>An instance of <c>System.IO.TextWriter</c> class.</returns>
        </member>
        <member name="T:TacitusLogger.Destinations.TextWriter.ITextWriterProvider">
            <summary>
            An interface all TextWriter providers should implement.
            </summary>
        </member>
        <member name="T:TacitusLogger.Destinations.TextWriter.TextWriterDestination">
            <summary>
            Destination that writes log model to the <c>System.IO.TextWriter</c> object.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.TextWriter.TextWriterDestination.#ctor(TacitusLogger.Serializers.ILogSerializer,TacitusLogger.Destinations.TextWriter.ITextWriterProvider)">
            <summary>
            Creates an instance of <c>TacitusLogger.Destinations.TextWriterDestination</c> using specified log serializer and 
            TextWriter provider.
            </summary>
            <param name="logSerializer">Log serializer</param>
            <param name="textWriterProvider">TextWriter provider</param>
        </member>
        <member name="M:TacitusLogger.Destinations.TextWriter.TextWriterDestination.#ctor(System.String,System.IO.TextWriter)">
            <summary>
            Creates an instance of <c>TacitusLogger.Destinations.TextWriterDestination</c> using SimpleTemplateLogSerializer
            serializer with the specified template and the specified TestWriter. 
            TextWriter provider.
            </summary>
            <param name="singleLinedTemplate">Template the will be used by SimpleTemplateLogSerializer to serialize log models.</param>
            <param name="textWriter">TextWriter that will be written to.</param>
        </member>
        <member name="P:TacitusLogger.Destinations.TextWriter.TextWriterDestination.LogSerializer">
            <summary>
            Gets the instance of <c>TacitusLogger.Serializers.ILogSerializer</c> that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Destinations.TextWriter.TextWriterDestination.TextWriterProvider">
            <summary>
            Gets the instance of <c>TacitusLogger.Providers.ITextWriterProvider</c> that was specified during the initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.TextWriter.TextWriterDestination.Send(TacitusLogger.LogModel[])">
            <summary>
            Writes log model to the destination.
            </summary>
            <param name="logs">Log models collection.</param> 
        </member>
        <member name="M:TacitusLogger.Destinations.TextWriter.TextWriterDestination.SendAsync(TacitusLogger.LogModel[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes log model to the destination.
            </summary>
            <param name="logs">Log models collection.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="T:TacitusLogger.Destinations.TextWriter.TextWriterProvider">
            <summary>
            Implements the <c>TacitusLogger.Providers.ITextWriterProvider</c> interface by providing <c>System.IO.TextWriter</c>
            specified during the initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.TextWriter.TextWriterProvider.#ctor(System.IO.TextWriter)">
            <summary>
            Creates an instance of <c>TacitusLogger.Providers.TextWriterProvider</c> using 
            instance of <c>System.IO.TextWriter</c> class.
            </summary>
            <param name="textWriter">Specified instance of <c>System.IO.TextWriter</c> class.</param>
        </member>
        <member name="P:TacitusLogger.Destinations.TextWriter.TextWriterProvider.TextWriter">
            <summary>
            Gets TextWriter instance provided during the initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Destinations.TextWriter.TextWriterProvider.GetTextWriter(TacitusLogger.LogModel)">
            <summary>
            Gets the <c>System.IO.TextWriter</c> instance using log model.
            </summary>
            <param name="logModel">Log model.</param>
            <returns>An instance of <c>System.IO.TextWriter</c> class.</returns>
        </member>
        <member name="F:TacitusLogger.ExceptionHandling.Silent">
            <summary>
            
            </summary>
        </member>
        <member name="F:TacitusLogger.ExceptionHandling.Log">
            <summary>
            
            </summary>
        </member>
        <member name="F:TacitusLogger.ExceptionHandling.Rethrow">
            <summary>
            
            </summary>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.String[],TacitusLogger.LogItem[])">
            <summary>
            Writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.String[],TacitusLogger.LogItem)">
            <summary>
            Writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.String[],System.Object)">
            <summary>
            Writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.String[])">
            <summary>
            Writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.Object)">
            <summary>
            Writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String)">
            <summary>
            Writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,TacitusLogger.LogType,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log.
            </summary>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,TacitusLogger.LogType,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log.
            </summary>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,TacitusLogger.LogType,System.String,System.Object)">
            <summary>
            Writes a new log.
            </summary>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.Log(TacitusLogger.ILogger,TacitusLogger.LogType,System.String)">
            <summary>
            Writes a new log.
            </summary>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object)">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,System.String,System.String[])">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,System.String,System.Object)">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,System.String)">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String,System.Object)">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfo(TacitusLogger.ILogger,System.String)">
            <summary>
            Writes a new log of type Info.
            </summary>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object)">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,System.String,System.String[])">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,System.String,System.Object)">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,System.String)">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String,System.Object)">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccess(TacitusLogger.ILogger,System.String)">
            <summary>
            Writes a new log of type Success.
            </summary>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object)">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,System.String,System.String[])">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,System.String,System.Object)">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,System.String)">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String,System.Object)">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEvent(TacitusLogger.ILogger,System.String)">
            <summary>
            Writes a new log of type Event.
            </summary>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object)">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,System.String,System.String[])">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,System.String,System.Object)">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,System.String)">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String,System.Object)">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarning(TacitusLogger.ILogger,System.String)">
            <summary>
            Writes a new log of type Warning.
            </summary>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object)">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,System.String,System.String[])">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,System.String,System.Object)">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,System.String)">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String,System.Object)">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogError(TacitusLogger.ILogger,System.String)">
            <summary>
            Writes a new log of type Error.
            </summary>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object)">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,System.String,System.String[])">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,System.String,System.Object)">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,System.String)">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String,System.Object)">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailure(TacitusLogger.ILogger,System.String)">
            <summary>
            Writes a new log of type Failure.
            </summary>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object)">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,System.String,System.String[])">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,System.String,System.Object)">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,System.String)">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[])">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem)">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String,System.Object)">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCritical(TacitusLogger.ILogger,System.String)">
            <summary>
            Writes a new log of type Critical.
            </summary>
            <param name="description">Log description.</param>
            <returns>Generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.String[],TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.String[],TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.String[],System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.String[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogType,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="context">Log context.</param>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,TacitusLogger.LogType,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,TacitusLogger.LogType,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,TacitusLogger.LogType,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogAsync(TacitusLogger.ILogger,TacitusLogger.LogType,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log.
            </summary>
            <param name="type">Log type.</param>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogInfoAsync(TacitusLogger.ILogger,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Info.
            </summary>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogSuccessAsync(TacitusLogger.ILogger,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Success.
            </summary>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogEventAsync(TacitusLogger.ILogger,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Event.
            </summary>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogWarningAsync(TacitusLogger.ILogger,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Warning.
            </summary>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogErrorAsync(TacitusLogger.ILogger,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Error.
            </summary>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogFailureAsync(TacitusLogger.ILogger,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Failure.
            </summary>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,System.String,System.String[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="tags">Collection of tags.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="context">Log context.</param>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItems">Collection of log items that contain additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,TacitusLogger.LogItem,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Log item that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="description">Log description.</param>
            <param name="logItem">Object that contains additional data to be saved in the log.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForILogger.LogCriticalAsync(TacitusLogger.ILogger,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log of type Critical.
            </summary>
            <param name="description">Log description.</param>
            <param name="cancellationToken">Operation cancellation token.</param>
            <returns>A task that represents the asynchronous operation. The value of the TResult represents generated log id.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TacitusLogger.ExtensionMethodsForLogger.AddLogDestinations(TacitusLogger.Logger,TacitusLogger.LogModelFunc{System.Boolean},TacitusLogger.Destinations.ILogDestination[])" -->
        <member name="M:TacitusLogger.ExtensionMethodsForLogger.AddLogDestinations(TacitusLogger.Logger,TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Creates a new LogGroup in the current logger with an "always true" rule.
            </summary> 
            <exception cref="T:System.ArgumentNullException">If no ILogDestination was specified or null array specified or one of specified ILogDestination is null.</exception>
            <param name="logDestinations">One or more log destinations collection.</param>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForLogger.AddLogDestinations(TacitusLogger.Logger,System.String,TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Creates a new LogGroup in the current logger with a rule bound to the given <paramref name="context"/>.
            </summary> 
            <exception cref="T:System.ArgumentNullException">If no ILogDestination was specified or null array specified or one of specified ILogDestination is null.</exception>
            <param name="context">Context of type string that is used in rule for created LogGroup</param>
            <param name="logDestinations">One or more log destinations collection.</param>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForLogger.AddLogDestinations(TacitusLogger.Logger,TacitusLogger.LogType,TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Creates a new LogGroup in the current logger with a rule bound to the given <paramref name="logType"/>.
            </summary> 
            <param name="logType">Log type of type LogType that is used in rule for created LogGroup</param>
            <param name="logDestinations">One or more log destinations collection.</param>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForLogger.AddSuccessDestinations(TacitusLogger.Logger,TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Creates a new LogGroup in the current logger with a rule bound to Success type logs.
            </summary> 
            <param name="logDestinations">One or more log destinations collection.</param>
            <returns>The Logger itself.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForLogger.AddInfoDestinations(TacitusLogger.Logger,TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Creates a new LogGroup in the current logger with a rule bound to Info type logs.
            </summary> 
            <param name="logDestinations">One or more log destinations collection.</param>
            <returns>The Logger itself.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForLogger.AddEventDestinations(TacitusLogger.Logger,TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Creates a new LogGroup in the current logger with a rule bound to Event type logs.
            </summary> 
            <param name="logDestinations">One or more log destinations collection.</param>
            <returns>The Logger itself.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForLogger.AddWarningDestinations(TacitusLogger.Logger,TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Creates a new LogGroup in the current logger with a rule bound to Warning type logs.
            </summary> 
            <param name="logDestinations">One or more log destinations collection.</param>
            <returns>The Logger itself.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForLogger.AddFailureDestinations(TacitusLogger.Logger,TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Creates a new LogGroup in the current logger with a rule bound to Failure type logs.
            </summary> 
            <param name="logDestinations">One or more log destinations collection.</param>
            <returns>The Logger itself.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForLogger.AddErrorDestinations(TacitusLogger.Logger,TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Creates a new LogGroup in the current logger with a rule bound to Error type logs.
            </summary> 
            <param name="logDestinations">One or more log destinations collection.</param>
            <returns>The Logger itself.</returns>
        </member>
        <member name="M:TacitusLogger.ExtensionMethodsForLogger.AddCriticalDestinations(TacitusLogger.Logger,TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Creates a new LogGroup in the current logger with a rule bound to Critical type logs.
            </summary> 
            <param name="logDestinations">One or more log destinations collection.</param>
            <returns>The Logger itself.</returns>
        </member>
        <member name="T:TacitusLogger.ILogger">
            <summary>
            ILogger interface that contains only the basic logging methods.
            </summary>
        </member>
        <member name="T:TacitusLogger.Caching.InMemoryLogCache">
            <summary>
            Used to manage the cache of log model entities of specified size.
            </summary>
        </member>
        <member name="M:TacitusLogger.Caching.InMemoryLogCache.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates an instance of <c>TacitusLogger.LogCache</c> using time provider, cache size and optional 
            number of milliseconds after which AddToCache method will return the collection irrelevant to its filling. 
            </summary> 
            <param name="size">Max size of caching collection after reaching which the AddToCache method returns the filled collection and creates a new empty one.</param>
            <param name="cacheTime">Max time in milliseconds after creating of caching collection after reaching which the AddToCache method returns the filled collection and creates a new empty one irrelevant to its filling.</param>
        </member>
        <member name="P:TacitusLogger.Caching.InMemoryLogCache.CacheSize">
            <summary>
            Gets the cache size that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Caching.InMemoryLogCache.CacheTime">
            <summary>
            Gets the cache time in milliseconds that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Caching.InMemoryLogCache.TimeProvider">
            <summary>
            Gets the time provider that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Caching.InMemoryLogCache.LogModelCollection">
            <summary>
            Gets the current log model collection.
            </summary>
        </member>
        <member name="P:TacitusLogger.Caching.InMemoryLogCache.CurrentIndex">
            <summary>
            Gets the current index in the log model collection.
            </summary>
        </member>
        <member name="M:TacitusLogger.Caching.InMemoryLogCache.AddToCache(TacitusLogger.LogModel,System.Boolean)">
            <summary>
            Adds log model entity to the cache. If after adding the cache becomes full or if specified time expired, the old collection 
            is returned and a new one is initialized. Otherwise, null is returned.
            </summary>
            <param name="logModel">log model entity that should be cached.</param>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.Caching.InMemoryLogCache.ResetCache">
            <summary>
            Creates a new collection and resets the current index and deadline ticks.
            </summary>
        </member>
        <member name="T:TacitusLogger.Logger">
            <summary>
            Class <c>Logger</c> represents the default implementation of ILogger interface and the main logging class.
            </summary>
        </member>
        <member name="M:TacitusLogger.Logger.#ctor(System.String,TacitusLogger.LogIdGenerators.ILogIdGenerator,TacitusLogger.LoggerSettings)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="logIdGenerator"></param>
            <param name="loggerSettings"></param>
        </member>
        <member name="M:TacitusLogger.Logger.#ctor(System.String,TacitusLogger.LogIdGenerators.ILogIdGenerator)">
            <summary>
            Creates a new instance of the Logger class with the provided logger name and ILogIdGenerator instance.
            </summary>
            <param name="name">Name for this logger. It will appear in log models as Source property.</param>
            <param name="logIdGenerator">Will be used to generate ids for created logs</param>
        </member>
        <member name="M:TacitusLogger.Logger.#ctor(System.String,TacitusLogger.LoggerSettings)">
            <summary> 
            Creates a new instance of the Logger class with the provided logger name and default log id generator.  
            </summary>
            <param name="name">Name for this logger. It will appear in log models as Source property.</param>
            <param name="loggerSettings"></param>
        </member>
        <member name="M:TacitusLogger.Logger.#ctor(System.String)">
            <summary> 
            Creates a new instance of the Logger class with the provided logger name and default log id generator.  
            </summary>
            <param name="name">Name for this logger. It will appear in log models as Source property.</param>
        </member>
        <member name="M:TacitusLogger.Logger.#ctor">
            <summary>
            Creates a new instance of Logger class with default settings.
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.LogIdGenerator">
            <summary>
            Implementation of ILogIdGenerator registered in this logger.
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.Name">
            <summary>
            Logger name specified during the initialization. It will appear in log models as Source property. 
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.LogGroups">
            <summary>
             Returns all LogGroup instances registered in this logger.
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.LogContributors">
            <summary>
            Gets the collection of all log contributors registered with this logger.
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.LogTransformers">
            <summary>
            Gets the collection of all log transformers registered with this logger.
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.LogCreationStrategy">
            <summary>
            Gets the log creation strategy that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.ExceptionHandlingStrategy">
            <summary>
            Gets the exception handling strategy that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.DiagnosticsDestination">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.DiagnosticsManager">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.Logger.LoggerSettings">
            <summary>
            Gets the logger settings that was specified during the initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Logger.AddLogGroup(TacitusLogger.LogGroupBase)">
            <summary>
            Adds a new log group to the current logger.
            </summary>
            <param name="logGroup">log group implementing <c>TacitusLogger.ILogGroup</c> interface</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TacitusLogger.Logger.NewLogGroup(TacitusLogger.LogModelFunc{System.Boolean})" -->
        <member name="M:TacitusLogger.Logger.GetLogGroup(System.String)">
            <summary>
            Finds the log group with the specified name. Returns null if not found.
            </summary>
            <param name="name">Log group name.</param>
            <returns>Log group or null if not found. </returns>
        </member>
        <member name="M:TacitusLogger.Logger.ResetLogCreationStrategy(TacitusLogger.Strategies.LogCreation.LogCreationStrategyBase)">
            <summary>
            Provides the possibility to reset the default log creation strategy with the custom one.
            </summary>
            <param name="logCreationStrategy">New log creation strategy.</param>
        </member>
        <member name="M:TacitusLogger.Logger.ResetExceptionHandlingStrategy(TacitusLogger.Strategies.ExceptionHandling.ExceptionHandlingStrategyBase)">
            <summary>
            
            </summary>
            <param name="exceptionHandlingStrategy"></param>
        </member>
        <member name="M:TacitusLogger.Logger.AddLogContributor(TacitusLogger.Contributors.LogContributorBase)">
            <summary>
            Adds a log contributor of type <c>TacitusLogger.Contributors.LogContributorBase</c> to the logger.
            </summary>
            <param name="logContributor">Log contributor.</param>
        </member>
        <member name="M:TacitusLogger.Logger.AddLogTransformer(TacitusLogger.Transformers.LogTransformerBase)">
            <summary>
            Adds a log transformer of type <c>TacitusLogger.Transformers.LogTransformerBase</c> to the logger.
            </summary>
            <param name="logContributor">Log transformer.</param>
        </member>
        <member name="M:TacitusLogger.Logger.SetDiagnosticsDestination(TacitusLogger.Destinations.ILogDestination)">
             <summary>
            
             </summary>
             <param name="logDestination"></param>
        </member>
        <member name="M:TacitusLogger.Logger.Log(TacitusLogger.Log)">
            <summary>
            Writes a new log. 
            </summary>
            <param name="context">Log context</param>
            <param name="type">Log type</param>
            <param name="description">Log description</param>
            <param name="loggingObject">An object that contains additional data to saved in log</param>
            <returns>Generated log id</returns>
        </member>
        <member name="M:TacitusLogger.Logger.LogAsync(TacitusLogger.Log,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a new log. 
            </summary>
            <param name="context">Log context</param>
            <param name="type">Log type</param>
            <param name="description">Log description</param>
            <param name="loggingObject">An object that contains additional data to saved in log</param>
            <returns>A task that represents the asynchronous read operation. The value of the TResult represents generated log id.</returns>
        </member>
        <member name="T:TacitusLogger.LogGroup">
            <summary>
            Represents a named group of log destinations provided with the log rule predicate.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:TacitusLogger.LogGroup.Rule" -->
        <!-- Badly formed XML comment ignored for member "P:TacitusLogger.LogGroup.LogDestinations" -->
        <member name="P:TacitusLogger.LogGroup.Name">
            <summary>
            Gets the name of the log group.
            </summary> 
        </member>
        <member name="P:TacitusLogger.LogGroup.CachingIsActive">
            <summary>
            Gets if log caching is enabled or not for this log group.
            </summary> 
        </member>
        <member name="P:TacitusLogger.LogGroup.LogCache">
            <summary>
            Gets the log cache that was specified during the initialization.
            </summary> 
        </member>
        <member name="P:TacitusLogger.LogGroup.DestinationFeedingStrategy">
            <summary>
            Gets the destination feeding strategy that was specified during the initialization.
            </summary> 
        </member>
        <member name="P:TacitusLogger.LogGroup.Status">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.LogGroup.LogGroupSettings">
            <summary>
            
            </summary>
        </member>
        <member name="M:TacitusLogger.LogGroup.AddDestinations(TacitusLogger.Destinations.ILogDestination[])">
            <summary>
            Adds one or more log destinations to the list of log group log destinations
            </summary>
            <exception cref="T:System.ArgumentNullException">If no ILogDestination was specified or null array specified or one of specified ILogDestination is null.</exception>
            <param name="logDestinations">One or more ILogDestination</param>
            <returns>The LogGroup itself</returns>
        </member>
        <member name="M:TacitusLogger.LogGroup.IsEligible(TacitusLogger.LogModel)">
            <summary>
            
            </summary>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.LogGroup.Send(TacitusLogger.LogModel)">
            <summary>
            Sends provided <paramref name="log"/> to all log destinations of this log group.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="log"/> is null.</exception>
            <param name="log">Log model of type log group.</param>
        </member>
        <member name="M:TacitusLogger.LogGroup.SendAsync(TacitusLogger.LogModel,System.Threading.CancellationToken)">
            <summary>
            Asynchronously sends provided <paramref name="log"/> to all log destinations of this log group.
            </summary>
            <exception cref="T:System.ArgumentNullException">If <paramref name="log"/> is null.</exception>
            <param name="log">Log model of type LogModel.</param>
            <returns>A task that represents the asynchronous operation.</returns>
        </member>
        <member name="M:TacitusLogger.LogGroup.GenerateGroupName">
            <summary>
            Generates a GUID based random unique name for log group. 
            </summary>
            <returns>Random group name.</returns>
        </member>
        <member name="T:TacitusLogger.LogGroupBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.LogGroupBase.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.LogGroupBase.Status">
            <summary>
            
            </summary>
        </member>
        <member name="M:TacitusLogger.LogGroupBase.IsEligible(TacitusLogger.LogModel)">
            <summary>
            
            </summary>
            <param name="log"></param>
            <returns></returns>        
        </member>
        <member name="M:TacitusLogger.LogGroupBase.Send(TacitusLogger.LogModel)">
            <summary>
            
            </summary>
            <param name="log"></param>
        </member>
        <member name="M:TacitusLogger.LogGroupBase.SendAsync(TacitusLogger.LogModel,System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="log"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.LogGroupBase.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:TacitusLogger.LogGroupExtensions.SetLogCache(TacitusLogger.LogGroup,System.Int32,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="cacheSize"></param>
            <param name="cacheTime"></param>
            <param name="isActive"></param>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.LogGroupExtensions.SetStatus(TacitusLogger.LogGroup,TacitusLogger.LogGroupStatus)">
            <summary> 
            Sets the active status of the log group. If omitted the group is active by default.
            </summary> 
            <param name="status">Log group status</param>
            <returns></returns>
        </member>
        <member name="T:TacitusLogger.LogIdGenerators.GuidLogIdGenerator">
            <summary>
            An implementation of ILogIdGenerator that generates log id in the form of GUID string.
            </summary>
        </member>
        <member name="M:TacitusLogger.LogIdGenerators.GuidLogIdGenerator.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <c>TacitusLogger.LogIdGenerators.GuidLogIdGenerator</c> class.
            </summary>
            <param name="guidFormat">The format of string representation of GUID. Default value is "N"</param>
            <param name="substringLength">
            Substring of GUID string from the beginning of the string that will constitute the
            generated log id. 0 means full string without sub-stringing. Default value is 0.
            </param>
        </member>
        <member name="P:TacitusLogger.LogIdGenerators.GuidLogIdGenerator.GuidFormat">
            <summary>
            Gets GUID string format.
            </summary>
        </member>
        <member name="P:TacitusLogger.LogIdGenerators.GuidLogIdGenerator.SubstringLength">
            <summary>
            Gets the specified length of GUID string that will constitute the generated log id.
            </summary>
        </member>
        <member name="M:TacitusLogger.LogIdGenerators.GuidLogIdGenerator.Generate(TacitusLogger.LogModel)">
            <summary>
            Generates log id string.
            </summary>
            <param name="logModel">Log model.</param>
            <returns>Log id string.</returns>
        </member>
        <member name="T:TacitusLogger.LogIdGenerators.ILogIdGenerator">
            <summary>
            Represents an interface which all log id generators should implement.
            </summary>
        </member>
        <member name="T:TacitusLogger.LogIdGenerators.SynchronousLogIdGeneratorBase">
            <summary>
            Convenient to be inherited from if log id generation operation represents a quick synchronous process
            which does not assume any specific overriding of the async counterpart of Generate method.
            </summary>
        </member>
        <member name="M:TacitusLogger.LogIdGenerators.SynchronousLogIdGeneratorBase.GenerateAsync(TacitusLogger.LogModel,System.Threading.CancellationToken)">
            <summary>
            Asynchronous counterpart of Generate method.
            </summary>
            <param name="logModel">Log model.</param>
            <returns>A task that represents completed asynchronous operation. The value of the TResult represents the resulting log id string.</returns>
        </member>
        <member name="T:TacitusLogger.LogModel">
            <summary>
            Represents log model.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogModel.LogId">
            <summary>
            Log id
            </summary>
        </member>
        <member name="F:TacitusLogger.LogModel.Context">
            <summary>
            Information about context of logging event (etc. method or class name)
            </summary>
        </member>
        <member name="F:TacitusLogger.LogModel.Tags">
            <summary>
            
            </summary>
        </member>
        <member name="F:TacitusLogger.LogModel.Source">
            <summary>
            Information about source of the log.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogModel.LogType">
            <summary>
            Type of logging event.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogModel.Description">
            <summary>
            Detailed information about logging event.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogModel.LogItems">
            <summary>
            List of log items which can be used to incorporate some additional information about the logging event.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogModel.LogDate">
            <summary>
            Date and time of logging event.
            </summary>
        </member>
        <member name="P:TacitusLogger.LogModel.LogTypeName">
            <summary>
            String representation of type of logging event.
            </summary>
        </member>
        <member name="T:TacitusLogger.LogType">
            <summary>
            Represents various types of logging event.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogType.Info">
            <summary>
            Informational logs.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogType.Success">
            <summary>
            Logs representing successful operation.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogType.Event">
            <summary>
            Logs representing some unexceptional event occurrence.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogType.Warning">
            <summary>
            Warning logs.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogType.Error">
            <summary>
            Error logs.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogType.Failure">
            <summary>
             Logs representing failure.
            </summary>
        </member>
        <member name="F:TacitusLogger.LogType.Critical">
            <summary>
             Logs representing some critical situations.
            </summary>
        </member>
        <member name="T:TacitusLogger.Serializers.ExtendedTemplateLogSerializer">
            <summary>
            ExtendedTemplateLogSerializer class implements log model serialization by means of a custom (or default) string template that has special keys-placeholders.
            </summary>
        </member>
        <member name="M:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.#ctor(System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Initializes a new instance of the <c>TacitusLogger.Serializers.ExtendedTemplateLogSerializer</c> with the specified template and
            JSON serializer settings.
            </summary>
            <exception cref="T:System.ArgumentNullException">If specified template is null.</exception>
            <param name="template">Template that will be used to serialize log model.</param>
            <param name="jsonSerializerSettings">JSON serializer settings.</param>
        </member>
        <member name="M:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <c>TacitusLogger.Serializers.ExtendedTemplateLogSerializer</c> with provided template and default JSON 
            serializer settings.
            </summary>
            <param name="template">Template that will be used to serialize log model.</param>
        </member>
        <member name="M:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Initializes a new instance of the <c>TacitusLogger.Serializers.ExtendedTemplateLogSerializer</c> with provided JSON serializer settings and 
            default template.
            </summary>
            <param name="jsonSerializerSettings">JSON serializer settings.</param>
        </member>
        <member name="M:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.#ctor">
            <summary>
            Initializes a new instance of the <c>TacitusLogger.Serializers.ExtendedTemplateLogSerializer</c> with default template
            and JSON serializer settings.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.DefaultDateFormat">
            <summary>
            Gets the default date format used for serialized representation of log date.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.DefaultTemplate">
            <summary>
            Gets the default template.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.DefaultJsonSerializerSettings">
            <summary>
            Gets the default Json serializer settings.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.JsonSerializerSettings">
            <summary>
            Gets the Json serializer settings specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.LogModelTemplateResolver">
            <summary>
            Gets the log model template resolver that was set during initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.JsonSerializerFacade">
            <summary>
            Gets the JSON serializer facade that was specified during the initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.ResetJsonSerializerFacade(TacitusLogger.Components.Json.IJsonSerializerFacade)">
            <summary>
            Replaces the default json serializer facade with the provided one.
            </summary>
            <param name="jsonSerializerFacade">New json serializer facade.</param>
        </member>
        <member name="M:TacitusLogger.Serializers.ExtendedTemplateLogSerializer.ResetLogModelTemplateResolver(TacitusLogger.Components.TemplateResolving.ILogModelTemplateResolver)">
            <summary>
            Resets the log model template resolver that was set during initialization. For testing purposes.
            </summary>
            <param name="logModelTemplateResolver">New log model template resolver.</param>
        </member>
        <member name="T:TacitusLogger.Serializers.FilePathTemplateLogSerializer">
            <summary>
            Implements log model serialization by means of a custom (or default) string template that has special keys-placeholders.
            </summary>
        </member>
        <member name="M:TacitusLogger.Serializers.FilePathTemplateLogSerializer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <c>TacitusLogger.Serializers.FilePathTemplateLogSerializer</c> with the specified template.
            </summary>
            <exception cref="T:System.ArgumentNullException">If specified template is null.</exception>
            <param name="template">Custom template.</param>
        </member>
        <member name="M:TacitusLogger.Serializers.FilePathTemplateLogSerializer.#ctor">
            <summary>
            Initializes a new instance of the <c>TacitusLogger.Serializers.FilePathTemplateLogSerializer</c> with the default template.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.FilePathTemplateLogSerializer.DefaultDateFormat">
            <summary>
            Gets the default date format used for serialized representation of log date.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.FilePathTemplateLogSerializer.DefaultTemplate">
            <summary>
            Gets the default template.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.FilePathTemplateLogSerializer.LogModelTemplateResolver">
            <summary>
            Gets the log model template resolver that was set during initialization. For testing purposes.
            </summary>
        </member>
        <member name="M:TacitusLogger.Serializers.FilePathTemplateLogSerializer.ResetLogModelTemplateResolver(TacitusLogger.Components.TemplateResolving.ILogModelTemplateResolver)">
            <summary>
            Resets the log model template resolver that was set during initialization. For testing purposes.
            </summary>
            <param name="logModelTemplateResolver">New log model template resolver.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:TacitusLogger.Serializers.GeneratorFunctionLogSerializer" -->
        <!-- Badly formed XML comment ignored for member "M:TacitusLogger.Serializers.GeneratorFunctionLogSerializer.#ctor(TacitusLogger.LogModelFunc{System.String})" -->
        <!-- Badly formed XML comment ignored for member "P:TacitusLogger.Serializers.GeneratorFunctionLogSerializer.GeneratorFunction" -->
        <member name="M:TacitusLogger.Serializers.GeneratorFunctionLogSerializer.Serialize(TacitusLogger.LogModel)">
            <summary>
            Serializes provided <paramref name="logModel"/> to string using specified template.
            </summary>
            <param name="logModel">Log model to be serialized.</param>
            <returns>Resulting string.</returns>
        </member>
        <member name="T:TacitusLogger.Serializers.ILogSerializer">
            <summary>
            Represents an interface which all log serializers should implement.
            </summary>
        </member>
        <member name="T:TacitusLogger.Serializers.JsonLogSerializer">
            <summary>
            Implements log model serialization using specified factory method that takes log model and returns an arbitrary object to be JSON serialized afterwards.
            </summary> 
        </member>
        <member name="M:TacitusLogger.Serializers.JsonLogSerializer.#ctor(TacitusLogger.LogModelFunc{System.Object},Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Creates an instance of <c>TacitusLogger.Serializers.JsonLogSerializer</c> using log model to custom type converter 
            and JSON serializer settings.
            </summary>
            <param name="converter">Delegate that is used to create custom type object from log model.</param>
            <param name="jsonSerializerSettings">JSON serializer settings that will be used to serialize the created object.</param>
        </member>
        <member name="M:TacitusLogger.Serializers.JsonLogSerializer.#ctor(TacitusLogger.LogModelFunc{System.Object})">
            <summary>
            Creates an instance of <c>TacitusLogger.Serializers.JsonLogSerializer</c> using log model to custom type converter.
            </summary>
            <param name="converter">Delegate that is used to create custom type object from log model.</param>
        </member>
        <member name="M:TacitusLogger.Serializers.JsonLogSerializer.#ctor(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            
            </summary>
            <param name="jsonSerializerSettings"></param>
        </member>
        <member name="M:TacitusLogger.Serializers.JsonLogSerializer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.JsonLogSerializer.DefaultJsonSerializerSettings">
            <summary>
            Gets default JSON serializer settings.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.JsonLogSerializer.DefaultConverter">
            <summary>
            Gets default converter. For testing purposes.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.JsonLogSerializer.Converter">
            <summary>
            Gets the converter delegate that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.JsonLogSerializer.JsonSerializerSettings">
            <summary>
            Gets the JSON serializer settings that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.JsonLogSerializer.JsonSerializerFacade">
            <summary>
            Gets the JSON serializer facade that was specified during the initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Serializers.JsonLogSerializer.Serialize(TacitusLogger.LogModel)">
            <summary>
            
            </summary>
            <param name="logModel"></param>
            <returns></returns>
        </member>
        <member name="M:TacitusLogger.Serializers.JsonLogSerializer.ResetJsonSerializerFacade(TacitusLogger.Components.Json.IJsonSerializerFacade)">
            <summary>
            Replaces the default json serializer facade with the provided one.
            </summary>
            <param name="jsonSerializerFacade">New json serializer facade.</param>
        </member>
        <member name="T:TacitusLogger.Serializers.SimpleTemplateLogSerializer">
            <summary>
            Implements log model serialization by means of a custom (or default) string template that has special keys-placeholders.
            </summary>
        </member>
        <member name="M:TacitusLogger.Serializers.SimpleTemplateLogSerializer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <c>TacitusLogger.Serializers.SimpleTemplateLogSerializer</c> with the specified template.
            </summary>
            <exception cref="!:ArgumentNullException">If specified template is null.</exception>
            <param name="template">Custom template.</param>
        </member>
        <member name="M:TacitusLogger.Serializers.SimpleTemplateLogSerializer.#ctor">
            <summary>
            Initializes a new instance of the <c>TacitusLogger.Serializers.SimpleTemplateLogSerializer</c> with the default template.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.SimpleTemplateLogSerializer.DefaultDateFormat">
            <summary>
            Gets the default date format used for serialized representation of log date.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.SimpleTemplateLogSerializer.DefaultTemplate">
            <summary>
            Gets the default template.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.SimpleTemplateLogSerializer.LogModelTemplateResolver">
            <summary>
            Gets the log model template resolver that was set during initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Serializers.SimpleTemplateLogSerializer.ResetLogModelTemplateResolver(TacitusLogger.Components.TemplateResolving.ILogModelTemplateResolver)">
            <summary>
            Resets the log model template resolver that was set during initialization. For testing purposes.
            </summary>
            <param name="logModelTemplateResolver">New log model template resolver.</param>
        </member>
        <member name="T:TacitusLogger.Serializers.TemplateLogSerializerBase">
             <summary>
            
             </summary>
        </member>
        <member name="M:TacitusLogger.Serializers.TemplateLogSerializerBase.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="template"></param>
        </member>
        <member name="P:TacitusLogger.Serializers.TemplateLogSerializerBase.Template">
            <summary>
            Gets the template specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Serializers.TemplateLogSerializerBase.LogModelTemplateResolver">
            <summary>
            Gets the log model template resolver that was set during initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Serializers.TemplateLogSerializerBase.Serialize(TacitusLogger.LogModel)">
            <summary>
            Serializes provided <paramref name="logModel"/> to string using specified template.
            </summary>
            <exception cref="T:System.ArgumentNullException">If specified <paramref name="logModel"/> is null.</exception>
            <param name="logModel">Log model to be serialized.</param>
            <returns>Resulting string.</returns>
        </member>
        <member name="F:TacitusLogger.Serializers.Templates.DateFormats.Default">
            <summary>
            Example: 14-Jan-20 15:31:24
            </summary>
        </member>
        <member name="F:TacitusLogger.Serializers.Templates.DateFormats.DefaultFileName">
            <summary>
            Example: 14-Jan-2020
            </summary>
        </member>
        <member name="F:TacitusLogger.Serializers.Templates.DateFormats.VeryShortTime">
            <summary>
            Example: 22:53
            </summary>
        </member>
        <member name="T:TacitusLogger.Strategies.DestinationFeeding.DestinationFeedingStrategyBase">
            <summary>
            Defines the logic of how log models will be consumed by log destinations within the log groups.
            </summary>
        </member>
        <member name="M:TacitusLogger.Strategies.DestinationFeeding.DestinationFeedingStrategyBase.Feed(TacitusLogger.LogModel[],System.Collections.Generic.IList{TacitusLogger.Destinations.ILogDestination})">
            <summary>
            
            </summary>
            <param name="logs"></param>
            <param name="logDestinations"></param>
        </member>
        <member name="M:TacitusLogger.Strategies.DestinationFeeding.DestinationFeedingStrategyBase.FeedAsync(TacitusLogger.LogModel[],System.Collections.Generic.IList{TacitusLogger.Destinations.ILogDestination},System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="logs"></param>
            <param name="logDestinations"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:TacitusLogger.Strategies.DestinationFeeding.FirstSuccessDestinationFeedingStrategy">
            <summary>
            
            </summary>
        </member>
        <member name="M:TacitusLogger.Strategies.DestinationFeeding.FirstSuccessDestinationFeedingStrategy.Feed(TacitusLogger.LogModel[],System.Collections.Generic.IList{TacitusLogger.Destinations.ILogDestination})">
            <summary>
            
            </summary>
            <param name="logs"></param>
            <param name="logDestinations"></param>
        </member>
        <member name="M:TacitusLogger.Strategies.DestinationFeeding.FirstSuccessDestinationFeedingStrategy.FeedAsync(TacitusLogger.LogModel[],System.Collections.Generic.IList{TacitusLogger.Destinations.ILogDestination},System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="logs"></param>
            <param name="logDestinations"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:TacitusLogger.Strategies.DestinationFeeding.GreedyDestinationFeedingStrategy">
            <summary>
            This destination feeding strategy sends all logs successively to all destinations, 
            irrelevant to exceptions thrown by one or more of them.
            </summary>
        </member>
        <member name="M:TacitusLogger.Strategies.DestinationFeeding.GreedyDestinationFeedingStrategy.Feed(TacitusLogger.LogModel[],System.Collections.Generic.IList{TacitusLogger.Destinations.ILogDestination})">
            <summary>
            
            </summary>
            <param name="logs"></param>
            <param name="logDestinations"></param>
        </member>
        <member name="M:TacitusLogger.Strategies.DestinationFeeding.GreedyDestinationFeedingStrategy.FeedAsync(TacitusLogger.LogModel[],System.Collections.Generic.IList{TacitusLogger.Destinations.ILogDestination},System.Threading.CancellationToken)">
            <summary>
            
            </summary>
            <param name="logs"></param>
            <param name="logDestinations"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:TacitusLogger.Strategies.LogCreation.LogCreationStrategyBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:TacitusLogger.Strategies.LogCreation.LogCreationStrategyBase.LogIdGenerator">
            <summary>
            Implementation of ILogIdGenerator that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Strategies.LogCreation.LogCreationStrategyBase.LogContributors">
            <summary>
            Gets the collection of all log contributors that was specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Strategies.LogCreation.LogCreationStrategyBase.ExceptionHandlingStrategy">
            <summary>
            Gets the exception handling strategy that was specified during the initialization.
            </summary>
        </member>
        <member name="M:TacitusLogger.Strategies.LogCreation.LogCreationStrategyBase.InitStrategy(TacitusLogger.LogIdGenerators.ILogIdGenerator,System.Collections.Generic.IList{TacitusLogger.Contributors.LogContributorBase},TacitusLogger.Strategies.ExceptionHandling.ExceptionHandlingStrategyBase)">
            <summary>
            Sets main dependencies of the strategy: log id generator of type <c>TacitusLogger.LogIdGenerators.ILogIdGenerator</c> 
            and the list of log contributors of type <c>TacitusLogger.Contributors.ILogContributor</c>.
            </summary>
            <param name="logIdGenerator">Log id generator that will be used to add ids to created log models.</param>
            <param name="logContributors">List of log contributors that will be used to add log attachments to created log model.</param>
        </member>
        <member name="M:TacitusLogger.Strategies.LogCreation.LogCreationStrategyBase.CreateLogModel(TacitusLogger.Log,System.String)">
            <summary>
            Creates an instance of <c>TacitusLogger.LogModel</c> model using specified log.
            </summary>
            <param name="log"></param> 
            <param name="source">Log source.</param>
            <returns>Created log model.</returns>
        </member>
        <member name="M:TacitusLogger.Strategies.LogCreation.LogCreationStrategyBase.CreateLogModelAsync(TacitusLogger.Log,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates an instance of <c>TacitusLogger.LogModel</c> model using specified log.
            </summary>
            <param name="log"></param> 
            <param name="source">Log source.</param>
            <param name="cancellationToken"></param>
            <returns>Created log model.</returns>
        </member>
        <member name="T:TacitusLogger.Strategies.LogCreation.StandardLogCreationStrategy">
            <summary>
            This class manages the creation of log model using the default strategy.
            </summary>
        </member>
        <member name="M:TacitusLogger.Strategies.LogCreation.StandardLogCreationStrategy.#ctor(System.Boolean)">
            <summary>
            Creates an instance of <c>TacitusLogger.LogCreationStrategies.StandardLogCreationStrategy</c>.
            </summary>
            <param name="useUtcTime">Indicates whether local or UTC time should be assigned to log date. If omitted, local time will be used.</param>
        </member>
        <member name="P:TacitusLogger.Strategies.LogCreation.StandardLogCreationStrategy.TimeProvider">
            <summary>
            Gets the time provider specified during the initialization.
            </summary>
        </member>
        <member name="P:TacitusLogger.Strategies.LogCreation.StandardLogCreationStrategy.UseUtcTime">
            <summary>
            Indicates whether local or UTC time will be assigned to log date.
            </summary>
        </member>
        <member name="M:TacitusLogger.Strategies.LogCreation.StandardLogCreationStrategy.CreateLogModel(TacitusLogger.Log,System.String)">
            <summary>
            Creates an instance of <c>TacitusLogger.LogModel</c> model using specified log.
            </summary>
            <param name="log"></param>
            <param name="source">Log source.</param>
            <returns>Created log model.</returns>
        </member>
        <member name="M:TacitusLogger.Strategies.LogCreation.StandardLogCreationStrategy.CreateLogModelAsync(TacitusLogger.Log,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates an instance of <c>TacitusLogger.LogModel</c> model using specified log.
            </summary>
            <param name="log"></param> 
            <param name="source">Log source.</param>
            <param name="cancellationToken"></param>
            <returns>Created log model.</returns>
        </member>
        <member name="M:TacitusLogger.Strategies.LogCreation.StandardLogCreationStrategy.ResetTimeProvider(TacitusLogger.Components.Time.ITimeProvider)">
            <summary>
            Resets the time provider that was set during the initialization.
            </summary>
            <param name="timeProvider"></param>
        </member>
    </members>
</doc>
